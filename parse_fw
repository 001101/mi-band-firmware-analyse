#!/usr/bin/env escript
%%! -noshell -noinput
%% -*- mode: erlang;erlang-indent-level: 4;indent-tabs-mode: nil -*-
%% ex: ft=erlang ts=4 sw=4 et

-define(MILI_HR, 16#78, 16#75, 16#63, 16#6B).
-define(MILI,    16#00, 16#98, 16#00, 16#20, 16#89).
-define(RUNNING, 16#00, 16#98, 16#00, 16#20, 16#A1).
-define(WEIGHT,  16#10, 16#00, 16#AC, 16#A4).

main([InputFilename]) ->
    {ok, FW} = file:read_file(InputFilename),
    {ok, Type} = guess_type(FW),
    {ok, Version} = get_version(Type, FW),
    IntCRC = erlang:crc32(FW),
    
    Info = #{file_name => filename:basename(InputFilename),
             type => Type,
             version => Version,
             crc32 => integer_to_list(IntCRC, 16)
            },
    io:format("~p~n", [Info]).

%% mili_hr has additional 24b headers. Rest is like in Mili
get_version(mili_hr, <<_SkipMiliHRHeader:16#24/binary, Rest/binary>>) ->
    get_version(mili, Rest);
get_version(mili, <<_Header:1056/binary, Version:4/binary, _Rest/binary>>) ->
    <<Revision,Build,Minor,Major>> = Version,
    ParsedVersion = {Major,Minor,Build,Revision},
    {ok, ParsedVersion}.

guess_type(<<?MILI_HR, _Rest/binary>>) -> {ok, mili_hr};
guess_type(<<?MILI,    _Rest/binary>>) -> {ok, mili};
guess_type(<<?RUNNING, _Rest/binary>>) -> {ok, running};
guess_type(<<?WEIGHT,  _Rest/binary>>) -> {ok, weight};
guess_type(_)                          -> {error, unknown_type}.
